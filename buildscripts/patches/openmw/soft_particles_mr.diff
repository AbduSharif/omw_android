diff --git a/apps/openmw/mwrender/postprocessor.cpp b/apps/openmw/mwrender/postprocessor.cpp
index 7405098a031fea692f118918b35b57877431b84e..0c048828588590843cf70f06f21372d63f88f922 100644
--- a/apps/openmw/mwrender/postprocessor.cpp
+++ b/apps/openmw/mwrender/postprocessor.cpp
@@ -234,8 +234,8 @@ namespace MWRender
         if (const auto depthProxy = std::getenv("OPENMW_ENABLE_DEPTH_CLEAR_PROXY"))
             mFirstPersonDepthRBProxy = new osg::RenderBuffer(width, height, mDepthTex->getInternalFormat(), samples);
 
-        if (Settings::Manager::getBool("soft particles", "Shaders"))
-            osgUtil::RenderBin::getRenderBinPrototype("DepthSortedBin")->setDrawCallback(new OpaqueDepthCopyCallback(mOpaqueDepthTex, mMsaaFbo ? mMsaaFbo : mFbo));
+//        if (Settings::Manager::getBool("soft particles", "Shaders"))
+//            osgUtil::RenderBin::getRenderBinPrototype("DepthSortedBin")->setDrawCallback(new OpaqueDepthCopyCallback(mOpaqueDepthTex, mMsaaFbo ? mMsaaFbo : mFbo));
 
         mViewer->getCamera()->resize(width, height);
         mHUDCamera->resize(width, height);
@@ -257,7 +257,7 @@ namespace MWRender
 
         if (Settings::Manager::getBool("soft particles", "Shaders"))
         {
-            mOpaqueDepthTex = new osg::Texture2D(*mDepthTex);
+            mOpaqueDepthTex = mDepthTex;
             mOpaqueDepthTex->setName("opaqueTexMap");
         }
 
diff --git a/files/shaders/softparticles.glsl b/files/shaders/softparticles.glsl
index fa8b4de4c118c7d0c14f5d92a7352f022d9306bd..0116efdcadf8c30a2a3ca2cc6919a83b022e111b 100644
--- a/files/shaders/softparticles.glsl
+++ b/files/shaders/softparticles.glsl
@@ -1,6 +1,6 @@
 uniform float near;
 uniform float far;
-uniform sampler2D opaqueDepthTex;
+uniform highp sampler2D opaqueDepthTex;
 uniform vec2 screenRes;
 uniform float particleSize;
