name: CI

on: [push, pull_request]

jobs:
  build:
    strategy:
      matrix:
        arch: [arm64]

    runs-on: ubuntu-20.04

    env:
      CMAKE_VERSION: 3.19.7

    steps:
    - uses: actions/checkout@v2

    - name: Install dependencies
      run: |
        sudo apt-get update --fix-missing
        sudo apt-get update
        sudo apt-get install -y build-essential gcc-multilib python unzip pkg-config p7zip-full libc6-dev
        cd /home/runner/
        wget https://github.com/Kitware/CMake/releases/download/v$CMAKE_VERSION/cmake-$CMAKE_VERSION-Linux-x86_64.tar.gz
        tar xvf cmake-$CMAKE_VERSION-Linux-x86_64.tar.gz

    - name: Build ICU
        mkdir -p icu-host-build
        cd icu-host-build
        wget https://github.com/unicode-org/icu/archive/refs/tags/release-70-1.zip
        unzip release-70-1.zip
        ICU_SOURCE_DIR=./icu-release-70-1/icu4c/source
        ${ICU_SOURCE_DIR}/configure --disable-tests --disable-samples --disable-icuio --disable-extras CC="ccache gcc" CXX="ccache g++"
        make -j $(nproc)
        cd ..

    - name: Build native libraries
      run: |
        export PATH=/home/runner/cmake-$CMAKE_VERSION-Linux-x86_64/bin/:$PATH
        cd buildscripts
        ./build.sh --arch ${{ matrix.arch }} --release --lto

    - name: Build the APK
      run: |
        ARCH=${{ matrix.arch }} source buildscripts/include/version.sh
        sed -i "s/abiFilters.*/abiFilters '$ABI'/" app/build.gradle
        export ANDROID_NDK_HOME=$(pwd)/buildscripts/toolchain/ndk/
        ./gradlew assembleNightlyDebug

    - name: Collect outputs
      id: getfilename
      run: |
        mv app/build/outputs/apk/nightly/debug/omw_debug_*.apk omw-debug-$(git rev-parse --short "$GITHUB_SHA")-${{ matrix.arch }}.apk
        echo "::set-output name=apk_file::$(ls omw-debug-*.apk | sed 's/\(.*\)\..*/\1/')"

    - name: Upload the APK
      uses: actions/upload-artifact@v1
      with:
        name: ${{ steps.getfilename.outputs.apk_file }}
        path: ${{ steps.getfilename.outputs.apk_file }}.apk
